{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Searchfield.js","components/Scroll.js","containers/errorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","card","props","id","name","email","className","alt","src","CardList","robots","cardArray","map","user","i","Card","Searchfield","searchChange","type","placeholder","onChange","Scroll","style","align","overflow","border","height","children","ErrorBoundary","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","searchbox","target","value","fetch","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCKCQ,EAVF,SAACC,GAAW,IACbC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,6BAAKC,IACL,4BAAIC,QCaDI,EAnBE,SAACP,GAAU,IAChBQ,EAAWR,EAAXQ,OACFC,EAAYD,EAAOE,KAAI,SAACC,EAAKC,GAC/B,OACI,cAACC,EAAD,CAEAZ,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHZK,EAAOI,GAAGX,OAOvB,OACI,qBAAKG,UAAU,KAAf,SACKK,KCLEK,EAXK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACI,qBAAKX,UAAU,SAAf,SACI,uBACAA,UAAU,gCACVY,KAAK,SACLC,YAAY,eACZC,SAAUH,OCCPI,EARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,MAAM,SAAUC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAjF,SACKxB,EAAMyB,YCiBJC,G,wDAlBX,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IACD2B,MAAM,CACPC,UAAU,GAHA,E,8DAMAC,EAAOC,GAGrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAGxB,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAK/B,MAAMyB,a,GAhBEQ,cC8CbC,E,kDAvCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,UAAYD,EAAME,OAAOC,SAbxC,EAAKZ,MAAM,CACPnB,OAAS,GACT6B,UAAY,IAJP,E,gEAQO,IAAD,OACfG,MAAM,8CACD/C,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,UAC1BjD,MAAK,SAAAkD,GAAK,OAAI,EAAKX,SAAS,CAAExB,OAAQmC,S,+BAOtC,IAAD,EAC0BZ,KAAKJ,MAA3BnB,EADJ,EACIA,OAAQ6B,EADZ,EACYA,UACVO,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASX,EAAUU,kBAEvD,OAASvC,EAAOyC,OAGZ,qCACI,oBAAI7C,UAAU,KAAd,6BACA,cAAC,EAAD,CAAaW,aAAcgB,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAUoC,WAPnC,iD,GAzBSX,a,MCAlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.2a9fc07f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import react from 'react';\r\n\r\nconst card = (props) => {\r\n    const { id, name, email } = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\r\n            <img alt='Robots' src={`https://robohash.org/${id}?size=200x200`}></img>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default card;","import Card from './Card.js';\r\n\r\nconst CardList = (props) =>{\r\n    const { robots } = props;\r\n    const cardArray = robots.map((user,i)=>{\r\n        return (\r\n            <Card \r\n            key={robots[i].id}\r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <div className='tc'>\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","const Searchfield = ({searchChange}) => {\r\n    return(\r\n        <div className='tc pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-light-blue'\r\n            type='search' \r\n            placeholder='search robot' \r\n            onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Searchfield;","const Scroll = (props) =>{\r\n    return(\r\n        <div style={{align:'center', overflow:'scroll', border:'3px solid black', height:'600px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import {Component} from 'react';\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        //logErrorToMyService(error, errorInfo);\r\n        this.setState({hasError:true});\r\n    }\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <h1>Something Went Wrong!!!</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;","import { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Searchfield from '../components/Searchfield';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundary from '../containers/errorBoundary';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots : [],\r\n            searchbox : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(Response => Response.json())\r\n            .then(users => this.setState({ robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchbox : event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchbox } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchbox.toLowerCase());\r\n        })\r\n        return (!robots.length) ?\r\n         <h1>LOADING....</h1> :\r\n        (\r\n            <>\r\n                <h1 className='tc'>Robo-Friends!!!</h1>\r\n                <Searchfield searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots = {filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}